worker_processes  1;

events {
  worker_connections  1024;
}

http {
  upstream asset-repo {
    server localhost:9091;
  }

  server {
    listen 9090;

    ssl                  off;
    #server_name          assetrepo;
    #ssl_certificate      /ssl/cert.pem;
    #ssl_certificate_key  /ssl/cert.key;
    #ssl_session_timeout  5m;

    proxy_set_header Host             $http_host;   # required for docker client's sake
    proxy_set_header X-Real-IP        $remote_addr; # pass on real client's IP
    proxy_set_header Authorization    ""; # see https://github.com/dotcloud/docker-registry/issues/170

    client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads
    chunked_transfer_encoding on;

    location ~ /assets/([^/]+)/([^/?]+)/ {
      if ($request_method = GET ) {
        rewrite ^/assets/([^/]+)/([^/?]+) /static/$1/$2;
      }
      proxy_pass http://asset-repo;
    }

    location ~ /assets/([^/]+)/([^/?]+) {
      if ($request_method = GET ) {
        rewrite ^/assets/([^/]+)/([^/?]+) /static/$1/$2;
      }
      proxy_pass http://asset-repo;
    }

    location ~ /staticauth/ {
      proxy_pass http://asset-repo/assets/$file/$version/;
      proxy_set_header X-Original-URI $request_uri;
      proxy_set_header X-Original-Method $request_method;
      proxy_set_header X-Original-User $remote_user;
      proxy_set_header X-Original-Addr $remote_addr;
    }

    location ~ /static/([^/]+)/([^/?]+) {
      set $file $1;
      set $version $2;
      auth_request /staticauth/;
      auth_request_set $contentdisp $upstream_http_CONTENT_DISPOSITION;
      add_header Content-Disposition $contentdisp;
      sendfile  on;
      autoindex on;
      alias /var/asset-data/$1/$2;
    }
    
    location / {
      proxy_pass http://asset-repo;
    }
  }

  include       mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  keepalive_timeout  65;

}
